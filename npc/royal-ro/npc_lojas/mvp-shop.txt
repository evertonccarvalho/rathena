-	shop	MVPPOINTS_shop	-1,512:15
prontera.gat,158,180,5	script	Loja de MVP	411,{

	delwaitingroom;
	waitingroom "Loja de MVP",0;

	set .name$,"[^FF0000  Loja MVP  ^000000]";
	set @Currency, -1;  // -1 = MVP Points, qualquer outro valor = ID do item

	mes .name$;
	if (@Currency == -1) {
		mes "Esta loja usa ^FF0000Pontos de MVP^000000 para comprar os itens.";
		mes "Você possui atualmente "+#MVPPOINTS+" Pontos de MVP.";
	} else {
		mes "Esta loja usa ^FF0000"+getitemname(@Currency)+"^000000 para comprar os itens.";
		mes "Você possui atualmente "+countitem(@Currency)+" "+getitemname(@Currency)+".";
	}

	deletearray .ItemLists[0],getarraysize(.ItemLists);
	deletearray .ItemPrice[0],getarraysize(.ItemPrice);
	npcshopitem "MVPPOINTS_shop",512,1;

	select(
		"^FF4500[ ]^000000 Equipamentos de Cabeça",
		"^1E90FF[ ]^000000 Equipamentos Médios",
		"^DAA520[ ]^000000 Equipamentos Inferiores",
		"^8A2BE2[ ]^000000 Caixas de Itens",
		"^228B22[ ]^000000 Itens Godly"
	);
	callsub CaseCH,@menu;

	npcshopdelitem "MVPPOINTS_shop",512;
	for(set .@i,0; .@i < getarraysize(.ItemLists); set .@i,.@i+1)
		npcshopadditem "MVPPOINTS_shop",.ItemLists[.@i],.ItemPrice[.@i];

	close2;
	callshop "MVPPOINTS_shop",1;
	npcshopattach "MVPPOINTS_shop";
	if (@Currency == -1)
		dispbottom "Você possui atualmente "+#MVPPOINTS+" Pontos de MVP.";
	else if (@Currency > 0)
		dispbottom "Você possui atualmente "+countitem(@Currency)+" "+getitemname(@Currency)+".";

	end;

OnBuyItem:
	// Calcula o custo total
	set @TotalCost, 0;
	for(set @i,0; @i < getarraysize(@bought_nameid); set @i,@i+1) {
		for(set @j,0; @j < getarraysize(.ItemLists); set @j,@j+1) {
			if(.ItemLists[@j] == @bought_nameid[@i]) {
				set @TotalCost, @TotalCost + (.ItemPrice[@j] * @bought_quantity[@i]);
				break;
			}
		}
	}

	// Verifica se tem moeda suficiente
	if (@Currency == -1) {
		if (#MVPPOINTS < @TotalCost) {
			set @notEnough, 1;
		}
	} else if (@Currency > 0) {
		if (countitem(@Currency) < @TotalCost) {
			set @notEnough, 1;
		}
	}

	if (@notEnough) {
		for(set @i,0; @i < getarraysize(@bought_nameid); set @i,@i+1) {
			mes "Item : ^0000FF"+getitemname(@bought_nameid[@i])+"^000000";
			mes "Quantidade : ^0000FF"+@bought_quantity[@i]+"^000000";
		}
		mes "^00FF00____________________________^000000";
		if (@Currency == -1)
			mes "Custo total : ^0000FF"+@TotalCost+" x Pontos de MVP^000000";
		else
			mes "Custo total : ^0000FF"+@TotalCost+" x "+getitemname(@Currency)+"^000000";
		mes "^00FF00____________________________^000000";
		if (@Currency == -1)
			mes "[ ^FF0000X^000000 ] Você não possui ^0000FFPontos de MVP^000000 suficientes para realizar esta compra.";
		else
			mes "[ ^FF0000X^000000 ] Você não possui ^0000FF"+getitemname(@Currency)+"^000000 suficientes para realizar esta compra.";
	} else {
		// Processa a compra
		for(set @i,0; @i < getarraysize(@bought_nameid); set @i,@i+1) {
			getitem @bought_nameid[@i],@bought_quantity[@i];
			message strcharinfo(0),"Comprou "+getitemname(@bought_nameid[@i]);
		}

		// Deduz a moeda
		if (@Currency == -1) {
			set #MVPPOINTS, #MVPPOINTS - @TotalCost;
		} else if (@Currency > 0) {
			delitem @Currency,@TotalCost;
		}

		mes "Obrigado pela compra!";
		if (@Currency == -1)
			mes "Agora você possui "+#MVPPOINTS+" Pontos de MVP.";
		else
			mes "Agora você possui "+countitem(@Currency)+" "+getitemname(@Currency)+".";
	}

	// Limpa variáveis
	set @TotalCost,0;
	set @notEnough,0;
	deletearray @bought_nameid[0],getarraysize(@bought_nameid);
	deletearray @bought_quantity[0],getarraysize(@bought_quantity);
	close;

CaseCH:
	switch(getarg(0)) {
		Case 1:  // Equipamentos de Cabeça
			set @Currency, -1;
			setarray .ItemLists[0],5137,5376,5374,5518,5423,5013,5286,5277;
			setarray .ItemPrice[0],250,250,250,250,250,250,250,250;
			return;
		Case 2:  // Equipamentos Médios
			set @Currency, -1;
			setarray .ItemLists[0],5788,2202,2204,5288,5786,5358,5401,5402,5389,5421,5325,20251,20304,20252,20256,20268,20205,20227,20280,20289,20322,20323,20308,20319;
			setarray .ItemPrice[0],200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200;
			return;
		Case 3:  // Equipamentos Inferiores
			set @Currency, -1;
			setarray .ItemLists[0],5574,5361,5155,5548,5305,20238,20240,20271,20212,5377,20222,20207,20224,20228,20229,20236,20219,20265,20318;
			setarray .ItemPrice[0],150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150;
			return;
		Case 4:  // Caixas de Itens
			set @Currency, -1;
			setarray .ItemLists[0],12103,14175,13581,13577,13585,13589,13595,14223,13610,13611,13716,13718,13720,13742,13745,13751,13757,13871,13872,13873,13874,13875,13876,13926,13927,13928,13929,13930,13931,13945,13946,13947,13948,13949,13950,13973,14180,13995;
			setarray .ItemPrice[0],5,5,20,25,25,25,25,25,20,20,25,10,10,15,15,30,30,70,70,70,70,70,70,75,75,75,75,75,75,80,80,80,80,80,80,15,15,5;
			return;
		Case 5:  // Itens Godly
			set @Currency, -1;
			setarray .ItemLists[0],2629,2630,2410,1530,2541,2383,1161;
			setarray .ItemPrice[0],500,500,500,500,500,500,500;
			return;

		default:
			mes "Seleção ou configuração inválida.";
			close;
	}

	OnInit:
	.NPCName$ = callfunc("F_NpcInitStatus", "Loja de MVP");
	setunitdata getnpcid(0), UNPC_GROUP_ID, 57;
	end;

}
